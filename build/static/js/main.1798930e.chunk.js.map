{"version":3,"sources":["i18n/index.tsx","security/roles.tsx","config/localhost.tsx","config/production.tsx","config/staging.tsx","index.tsx","config sync /^/.*$","modules/auth/authActions.tsx","modules/layout/layoutSelectors.tsx","view/layout/UserMenu.tsx","view/layout/Header.tsx","view/menus.tsx","view/layout/Menu.tsx","view/layout/Layout.tsx","view/shared/routes/PrivateRoute.tsx","view/shared/routes/PublicRoute.tsx","view/shared/ProgressBar.tsx","view/shared/LoadingComponent.tsx","view/shared/CustomLoadable.tsx","view/routes.tsx","view/shared/routes/EmptyPermissionsRoute.tsx","view/shared/routes/RoutesComponent.tsx","App.tsx","modules/shared/error/errors.tsx","modules/user/list/userListActions.tsx","view/shared/message.tsx","modules/store.tsx","modules/initializers.tsx","modules/auth/authInitializer.tsx","modules/layout/layoutReducers.tsx","modules/auth/authReducers.tsx","modules/user/list/userListReducers.tsx","modules/user/form/userFormActions.tsx","modules/user/form/userFormReducers.tsx","modules/user/view/userViewReducers.tsx","modules/user/userReducers.tsx","modules/reducers.tsx","modules/auth/authService.tsx","modules/shared/axios/authAxios.tsx","modules/auth/authSelectors.tsx","modules/auth/authToken.tsx","modules/user/userService.tsx","modules/layout/layoutActions.tsx","modules/auth/permissionChecker.tsx","modules/user/list/userListSelectors.tsx","config/index.tsx","security/permissions.tsx","modules/user/view/userViewActions.tsx"],"names":["currentLanguageCode","languages","es","id","label","flag","dateFns","dictionary","init","a","setLanguageCode","localStorage","getItem","initEs","language","momentLocale","default","moment","locale","validation","setYupLocale","getLanguage","getLanguageCode","format","message","args","replace","match","number","error","console","arg","Error","setItem","i18nExists","key","_get","Boolean","i18n","Roles","roleId","this","values","admin","custom","frontendUrl","host","protocol","backendUrl","AuthToken","applyFromLocationUrlIfExists","i18nInit","App","require","document","title","ReactDOM","render","getElementById","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","module","exports","prefix","authActions","ERROR_MESSAGE_CLEARED","AUTH_INIT_SUCCESS","AUTH_INIT_ERROR","AUTH_START","AUTH_SUCCESS","AUTH_ERROR","UPDATE_PROFILE_START","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_ERROR","CURRENT_USER_REFRESH_START","CURRENT_USER_REFRESH_SUCCESS","CURRENT_USER_REFRESH_ERROR","doClearErrorMessage","type","doSigninWithEmailAndPassword","email","password","rememberMe","dispatch","currentUser","service","signinWithEmailAndPassword","token","set","fetchMe","payload","signout","Errors","errorCode","handle","selectMessage","doSignout","doInit","get","doRefreshCurrentUser","doUpdateProfile","data","updateProfile","Message","success","getHistory","push","selectRaw","state","layout","layoutSelectors","selectMenuVisible","createSelector","menuVisible","selectLoading","loading","selectLanguage","useStyles","makeStyles","theme","button","color","palette","getContrastText","primary","main","buttonInner","display","alignItems","text","margin","spacing","flexDirection","breakpoints","up","optionText","UserMenu","props","useState","anchorEl","setAnchorEl","useDispatch","classes","userText","useSelector","authSelectors","selectCurrentUserNameOrEmailPrefix","userAvatar","selectCurrentUserAvatar","Button","className","onClick","event","currentTarget","Avatar","src","alt","keepMounted","open","onClose","MenuItem","appBar","zIndex","drawer","logo","paddingLeft","fontWeight","fontSize","textDecoration","grow","flex","Header","AppBar","position","Toolbar","IconButton","edge","layoutActions","doToggleMenu","to","permissions","Permissions","path","exact","icon","permissionRequired","userRead","filter","width","flexShrink","drawerPaper","active","typography","fontWeightMedium","toolbar","mixins","listItemIcon","minWidth","listItemDisabled","opacity","Menu","selectCurrentUser","permissionChecker","PermissionChecker","useLayoutEffect","toggleMenuOnResize","window","innerWidth","actions","doHideMenu","doShowMenu","addEventListener","removeEventListener","selectedKeys","url","menus","find","option","startsWith","CustomRouterLink","style","flexGrow","Drawer","variant","anchor","paper","List","menu","permission","ListItem","ListItemIcon","clsx","includes","ListItemText","root","backgroundColor","fontFamily","content","padding","minHeight","overflowX","Layout","useRouteMatch","children","PrivateRoute","Component","component","rest","location","useLocation","isAuthenticated","isEmptyPermissions","pathname","from","PublicRoute","NProgress","configure","showSpinner","ProgressBar","start","done","LoadingComponent","useEffect","CustomLoadable","opts","LazyComponent","React","lazy","loader","Suspense","fallback","privateRoutes","publicRoutes","emptyPermissionsRoutes","simpleRoutes","EmptyPermissionsRoute","RoutesComponent","isInitialMount","useRef","authLoading","selectLoadingInit","layoutLoading","current","routes","route","store","configureStore","AppWithRedux","colors","createMuiTheme","secondary","maxSnack","CssBaseline","AppWithSnackbar","enqueueSnackbar","useSnackbar","registerNotistakEnqueueSnackbar","history","DEFAULT_ERROR_MESSAGE","selectErrorMessage","response","String","selectErrorKeyOrMessage","selectErrorCode","status","authService","reload","userListActions","FETCH_STARTED","FETCH_SUCCESS","FETCH_ERROR","RESETED","TOGGLE_ONE_SELECTED","TOGGLE_ALL_SELECTED","CLEAR_ALL_SELECTED","PAGINATION_CHANGED","SORTER_CHANGED","DESTROY_ALL_SELECTED_STARTED","DESTROY_ALL_SELECTED_SUCCESS","DESTROY_ALL_SELECTED_ERROR","DESTROY_STARTED","DESTROY_SUCCESS","DESTROY_ERROR","doClearAllSelected","doToggleAllSelected","doToggleOneSelected","doReset","doFetch","doChangePagination","pagination","getState","doFetchCurrentFilter","doChangeSort","sorter","selectors","selectFilter","rawFilter","selectRawFilter","keepPagination","UserService","fetchUsers","selectOrderBy","selectLimit","selectOffset","rows","count","doDestroy","destroy","doDestroyAllSelected","selectedRows","selectSelectedRows","row","notistakEnqueueSnackbar","instance","initialData","MENU_TOGGLE","MENU_SHOW","MENU_HIDE","loadingInit","loadingUpdateProfile","errorMessage","errorMessageVerifyEmail","pageSize","userFormActions","INIT_STARTED","INIT_SUCCESS","INIT_ERROR","ADD_STARTED","ADD_SUCCESS","ADD_ERROR","UPDATE_STARTED","UPDATE_SUCCESS","UPDATE_ERROR","isEdit","record","doAdd","create","doUpdate","edit","initLoading","saveLoading","user","combineReducers","list","exists","isAllSelected","length","form","view","FIND_STARTED","FIND_SUCCESS","FIND_ERROR","createBrowserHistory","preloadedState","middlewares","thunkMiddleware","routerMiddleware","createStore","router","connectRouter","auth","composeWithDevTools","applyMiddleware","initializers","initializer","AuthService","authAxios","post","body","put","Axios","baseURL","config","paramsSerializer","params","Qs","stringify","arrayFormat","value","isMoment","Date","toISOString","interceptors","request","use","options","headers","log","Promise","reject","selectAuthenticationUser","authenticationUser","selectCurrentUserEmail","selectCurrentUserFullName","fullName","selectSignedIn","selectLoadingUpdateProfile","firstName","split","avatars","downloadUrl","inMemoryToken","authToken","URLSearchParams","search","replaceState","origin","ids","delete","orderBy","limit","offset","sort","size","page","query","doChangeLanguage","rolesMatchOneOf","allowedRoles","currentUserRolesIds","Array","isArray","some","role","roles","name","raw","selectRows","selectCount","selectHasRows","selectSorter","field","direction","order","selectPagination","total","selectSelectedKeys","userListSelectors","selectIsAllSelected","process","env","REACT_APP_ENVIRONMENT","userEdit","userDestroy","userCreate","userAutocomplete","userViewActions","doFind"],"mappings":"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","file":"static/js/main.1798930e.chunk.js","sourcesContent":["import React from 'react';\r\nimport _get from 'lodash/get';\r\nimport moment from 'moment';\r\nimport { setLocale as setYupLocale } from 'yup';\r\n\r\nlet currentLanguageCode = '';\r\n\r\nconst languages: {\r\n  [key: string]: {\r\n    id: string;\r\n    label: string;\r\n    flag: string;\r\n    dateFns: any;\r\n    dictionary: any;\r\n  };\r\n} = {\r\n  es: {\r\n    id: 'es',\r\n    label: 'Español',\r\n    flag: '/images/flags/Spain.png',\r\n    dateFns: null,\r\n    dictionary: null,\r\n  },\r\n};\r\n\r\nexport async function init() {\r\n  currentLanguageCode =\r\n    localStorage.getItem('language') || 'es';\r\n  setLanguageCode(currentLanguageCode);\r\n\r\n  if (currentLanguageCode === 'es') {\r\n    await initEs();\r\n  }\r\n}\r\n\r\nasync function initEs() {\r\n  const language = languages['es'];\r\n\r\n  // @ts-ignore\r\n  const momentLocale = (await import('moment/locale/es'))\r\n    .default;\r\n\r\n  language.dateFns = (\r\n    await import('date-fns/locale/es')\r\n  ).default;\r\n\r\n  language.dictionary = (\r\n    await import('src/i18n/es')\r\n  ).default;\r\n\r\n  moment.locale('es', momentLocale);\r\n\r\n  if (language.dictionary.validation) {\r\n    setYupLocale(language.dictionary.validation);\r\n  }\r\n\r\n  return language;\r\n}\r\n\r\nexport function getLanguage() {\r\n  return languages[getLanguageCode()];\r\n}\r\n\r\nfunction format(message, args) {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    return message.replace(/{(\\d+)}/g, function (\r\n      match,\r\n      number,\r\n    ) {\r\n      return typeof args[number] != 'undefined'\r\n        ? args[number]\r\n        : match;\r\n    });\r\n  } catch (error) {\r\n    console.error(message, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport function getLanguages() {\r\n  return Object.keys(languages).map((language) => {\r\n    return languages[language];\r\n  });\r\n}\r\n\r\nexport function getLanguageCode() {\r\n  return currentLanguageCode;\r\n}\r\n\r\nexport function setLanguageCode(arg) {\r\n  if (!languages[arg]) {\r\n    throw new Error(`Invalid language ${arg}.`);\r\n  }\r\n\r\n  localStorage.setItem('language', arg);\r\n}\r\n\r\nexport function i18nExists(key) {\r\n  if (!getLanguage()) {\r\n    return false;\r\n  }\r\n\r\n  const message = _get(getLanguage().dictionary, key);\r\n  return Boolean(message);\r\n}\r\n\r\nexport function i18n(key, ...args) {\r\n  if (!getLanguage()) {\r\n    return key;\r\n  }\r\n\r\n  const message = _get(getLanguage().dictionary, key);\r\n\r\n  if (!message) {\r\n    return key;\r\n  }\r\n\r\n  return format(message, args);\r\n}\r\n\r\nexport function i18nHtml(key, ...args) {\r\n  return (\r\n    <span\r\n      dangerouslySetInnerHTML={{\r\n        __html: i18n(key, ...args),\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { i18n } from 'src/i18n';\r\n\r\nclass Roles {\r\n  static get values() {\r\n    return {\r\n      admin: 'ADMIN',\r\n      custom: 'custom',\r\n    };\r\n  }\r\n\r\n  static labelOf(roleId) {\r\n    if (!this.values[roleId]) {\r\n      return roleId;\r\n    }\r\n\r\n    return i18n(`roles.${roleId}.label`);\r\n  }\r\n\r\n  static descriptionOf(roleId) {\r\n    if (!this.values[roleId]) {\r\n      return roleId;\r\n    }\r\n\r\n    return i18n(`roles.${roleId}.description`);\r\n  }\r\n}\r\n\r\nexport default Roles;","const backendUrl = `http://localhost:8080/api`;\r\n\r\n/**\r\n * Frontend Url.\r\n */\r\nconst frontendUrl = {\r\n  host: 'localhost:3000',\r\n  protocol: 'http',\r\n};\r\n\r\nexport default {\r\n  frontendUrl,\r\n  backendUrl,\r\n};","// Place the URL here with the /api suffix.\r\n// Ex.:`https://domain.com/api`;\r\nconst backendUrl = `/api`;\r\n\r\n/**\r\n * Frontend URL.\r\n */\r\nconst frontendUrl = {\r\n  host: 'domain.com',\r\n  protocol: 'https',\r\n};\r\n\r\n\r\nexport default {\r\n  frontendUrl,\r\n  backendUrl,\r\n};\r\n","// Place the URL here with the /api suffix.\r\n// Ex.:`https://domain.com/api`;\r\nconst backendUrl = `/api`;\r\n\r\n/**\r\n * Frontend URL.\r\n */\r\nconst frontendUrl = {\r\n  host: 'domain.com',\r\n  protocol: 'https',\r\n};\r\n\r\nexport default {\r\n  frontendUrl,\r\n  backendUrl,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { i18n, init as i18nInit } from 'src/i18n';\r\nimport { AuthToken } from './modules/auth/authToken';\r\n\r\n(async function () {\r\n  AuthToken.applyFromLocationUrlIfExists();\r\n  await i18nInit();\r\n\r\n  const App = require('./App').default;\r\n  document.title = i18n('app.title');\r\n  ReactDOM.render(<App />, document.getElementById('root'));\r\n})();\r\n","var map = {\n\t\"./\": 72,\n\t\"./index\": 72,\n\t\"./index.tsx\": 72,\n\t\"./localhost\": 141,\n\t\"./localhost.tsx\": 141,\n\t\"./production\": 142,\n\t\"./production.tsx\": 142,\n\t\"./staging\": 143,\n\t\"./staging.tsx\": 143\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 239;","import service from 'src/modules/auth/authService';\r\nimport Errors from 'src/modules/shared/error/errors';\r\nimport Message from 'src/view/shared/message';\r\nimport { i18n } from 'src/i18n';\r\nimport { getHistory } from 'src/modules/store';\r\nimport { AuthToken } from 'src/modules/auth/authToken';\r\n\r\nconst prefix = 'AUTH';\r\n\r\nconst authActions = {\r\n  ERROR_MESSAGE_CLEARED: `${prefix}_ERROR_MESSAGE_CLEARED`,\r\n\r\n  AUTH_INIT_SUCCESS: `${prefix}_INIT_SUCCESS`,\r\n  AUTH_INIT_ERROR: `${prefix}_INIT_ERROR`,\r\n\r\n  AUTH_START: `${prefix}_START`,\r\n  AUTH_SUCCESS: `${prefix}_SUCCESS`,\r\n  AUTH_ERROR: `${prefix}_ERROR`,\r\n\r\n  UPDATE_PROFILE_START: `${prefix}_UPDATE_PROFILE_START`,\r\n  UPDATE_PROFILE_SUCCESS: `${prefix}_UPDATE_PROFILE_SUCCESS`,\r\n  UPDATE_PROFILE_ERROR: `${prefix}_UPDATE_PROFILE_ERROR`,\r\n\r\n  CURRENT_USER_REFRESH_START: `${prefix}_CURRENT_USER_REFRESH_START`,\r\n  CURRENT_USER_REFRESH_SUCCESS: `${prefix}_CURRENT_USER_REFRESH_SUCCESS`,\r\n  CURRENT_USER_REFRESH_ERROR: `${prefix}_CURRENT_USER_REFRESH_ERROR`,\r\n\r\n  doClearErrorMessage() {\r\n    return {\r\n      type: authActions.ERROR_MESSAGE_CLEARED,\r\n    };\r\n  },\r\n\r\n  doSigninWithEmailAndPassword: (\r\n    email,\r\n    password,\r\n    rememberMe,\r\n  ) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: authActions.AUTH_START });\r\n\r\n      let currentUser = null;\r\n\r\n      const token = await service.signinWithEmailAndPassword(\r\n        email,\r\n        password,\r\n      );\r\n\r\n      AuthToken.set(token, rememberMe);\r\n      currentUser = await service.fetchMe();\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_SUCCESS,\r\n        payload: {\r\n          currentUser,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      await service.signout();\r\n\r\n      if (Errors.errorCode(error) !== 400) {\r\n        Errors.handle(error);\r\n      }\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_ERROR,\r\n        payload: Errors.selectMessage(error),\r\n      });\r\n    }\r\n  },\r\n\r\n  doSignout: () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: authActions.AUTH_START });\r\n      await service.signout();\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_SUCCESS,\r\n        payload: {\r\n          currentUser: null,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_ERROR,\r\n      });\r\n    }\r\n  },\r\n\r\n  doInit: () => async (dispatch) => {\r\n    try {\r\n      const token = AuthToken.get();\r\n      let currentUser = null;\r\n\r\n      if (token) {\r\n        currentUser = await service.fetchMe();\r\n      }\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_INIT_SUCCESS,\r\n        payload: {\r\n          currentUser,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      service.signout();\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: authActions.AUTH_INIT_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  },\r\n\r\n  doRefreshCurrentUser: () => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authActions.CURRENT_USER_REFRESH_START,\r\n      });\r\n\r\n      let currentUser = null;\r\n      const token = AuthToken.get();\r\n\r\n      if (token) {\r\n        currentUser = await service.fetchMe();\r\n      }\r\n\r\n      dispatch({\r\n        type: authActions.CURRENT_USER_REFRESH_SUCCESS,\r\n        payload: {\r\n          currentUser,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      service.signout();\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: authActions.CURRENT_USER_REFRESH_ERROR,\r\n        payload: error,\r\n      });\r\n    }\r\n  },\r\n\r\n  doUpdateProfile: (data) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: authActions.UPDATE_PROFILE_START,\r\n      });\r\n\r\n      await service.updateProfile(data);\r\n\r\n      dispatch({\r\n        type: authActions.UPDATE_PROFILE_SUCCESS,\r\n      });\r\n      await dispatch(authActions.doRefreshCurrentUser());\r\n      Message.success(i18n('auth.profile.success'));\r\n      getHistory().push('/');\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: authActions.UPDATE_PROFILE_ERROR,\r\n      });\r\n    }\r\n  },\r\n\r\n  \r\n};\r\n\r\nexport default authActions;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectRaw = (state) => state.layout;\r\n\r\nconst selectMenuVisible = createSelector(\r\n  [selectRaw],\r\n  (layout) => Boolean(layout.menuVisible),\r\n);\r\n\r\nconst selectLoading = createSelector(\r\n  [selectRaw],\r\n  (layout) => Boolean(layout.loading),\r\n);\r\n\r\nconst selectLanguage = createSelector(\r\n  [selectRaw],\r\n  (layout) => layout.language,\r\n);\r\n\r\nconst layoutSelectors = {\r\n  selectRaw,\r\n  selectMenuVisible,\r\n  selectLoading,\r\n  selectLanguage,\r\n};\r\n\r\nexport default layoutSelectors;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  makeStyles,\r\n  Avatar,\r\n} from '@material-ui/core';\r\nimport authSelectors from 'src/modules/auth/authSelectors';\r\nimport { getHistory } from 'src/modules/store';\r\nimport authActions from 'src/modules/auth/authActions';\r\nimport { i18n } from 'src/i18n';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: theme.palette.getContrastText(\r\n      theme.palette.primary.main,\r\n    ),\r\n  },\r\n  buttonInner: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    margin: theme.spacing(0, 0.5, 0, 1),\r\n    display: 'none',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    color: theme.palette.getContrastText(\r\n      theme.palette.primary.main,\r\n    ),\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  optionText: {\r\n    margin: theme.spacing(0, 0.5, 0, 1),\r\n  },\r\n}));\r\n\r\nfunction UserMenu(props) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const userText = useSelector(\r\n    authSelectors.selectCurrentUserNameOrEmailPrefix,\r\n  );\r\n  const userAvatar = useSelector(\r\n    authSelectors.selectCurrentUserAvatar,\r\n  );\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const doSignout = () => {\r\n    dispatch(authActions.doSignout());\r\n  };\r\n\r\n  const doNavigateToProfile = () => {\r\n    getHistory().push('/profile');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        className={classes.button}\r\n        onClick={handleClick}\r\n      >\r\n        <div className={classes.buttonInner}>\r\n          {userAvatar && (\r\n            <Avatar src={userAvatar} alt=\"avatar\" />\r\n          )}\r\n          {!userAvatar && <AccountCircleIcon />}\r\n          <div className={classes.text}>\r\n            <div>{userText}</div>\r\n          </div>\r\n        </div>\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={doNavigateToProfile}>\r\n          <PersonOutlineIcon />\r\n          <span className={classes.optionText}>\r\n            {i18n('auth.profile.title')}\r\n          </span>\r\n        </MenuItem>\r\n        <MenuItem onClick={doSignout}>\r\n          <ExitToAppIcon />\r\n          <span className={classes.optionText}>\r\n            {i18n('auth.signout')}\r\n          </span>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserMenu;\r\n","import layoutActions from 'src/modules/layout/layoutActions';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from 'src/view/layout/UserMenu';\r\nimport { Link } from 'react-router-dom';\r\nimport { i18n } from 'src/i18n';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    color: theme.palette.getContrastText(\r\n      theme.palette.primary.main,\r\n    ),\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  logo: {\r\n    paddingLeft: theme.spacing(1),\r\n    fontWeight: 500,\r\n    fontSize: '1.5em',\r\n    color: theme.palette.getContrastText(\r\n      theme.palette.primary.main,\r\n    ),\r\n    textDecoration: 'none',\r\n  },\r\n  grow: {\r\n    flex: '1 1 auto',\r\n  },\r\n}));\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const doToggleMenu = () => {\r\n    dispatch(layoutActions.doToggleMenu());\r\n  };\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"fixed\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          onClick={doToggleMenu}\r\n          color=\"inherit\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        <Link className={classes.logo} to=\"/\">\r\n            <>{i18n('app.title')}</>\r\n        </Link>\r\n\r\n        <div className={classes.grow} />\r\n\r\n        <UserMenu />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Permissions from 'src/security/permissions';\r\nimport { i18n } from 'src/i18n';\r\nimport React from 'react';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst permissions = Permissions.values;\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    icon: <DashboardIcon />,\r\n    label: i18n('dashboard.menu'),\r\n    permissionRequired: null,\r\n  },\r\n\r\n  {\r\n    path: '/user',\r\n    label: i18n('user.menu'),\r\n    permissionRequired: permissions.userRead,\r\n    icon: <PersonIcon />,\r\n  },\r\n].filter(Boolean);\r\n","import React, { useLayoutEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport authSelectors from 'src/modules/auth/authSelectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PermissionChecker from 'src/modules/auth/permissionChecker';\r\nimport actions from 'src/modules/layout/layoutActions';\r\nimport layoutSelectors from 'src/modules/layout/layoutSelectors';\r\nimport menus from 'src/view/menus';\r\nimport clsx from 'clsx';\r\nimport {\r\n  makeStyles,\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\n\r\nconst drawerWidth = 200;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  listItemIcon: {\r\n    minWidth: '48px',\r\n  },\r\n  listItemDisabled: {\r\n    opacity: 0.5,\r\n  },\r\n}));\r\n\r\nfunction Menu(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const currentUser = useSelector(\r\n    authSelectors.selectCurrentUser,\r\n  );\r\n  const menuVisible = useSelector(\r\n    layoutSelectors.selectMenuVisible,\r\n  );\r\n  const permissionChecker = new PermissionChecker(\r\n    currentUser,\r\n  );\r\n\r\n  useLayoutEffect(() => {\r\n    const toggleMenuOnResize = () => {\r\n      (window as any).innerWidth < 576\r\n        ? dispatch(actions.doHideMenu())\r\n        : dispatch(actions.doShowMenu());\r\n    };\r\n\r\n    toggleMenuOnResize();\r\n\r\n    (window as any).addEventListener(\r\n      'resize',\r\n      toggleMenuOnResize,\r\n    );\r\n\r\n    return () => {\r\n      (window as any).removeEventListener(\r\n        'resize',\r\n        toggleMenuOnResize,\r\n      );\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const selectedKeys = () => {\r\n    const url = props.url;\r\n\r\n    const match = menus.find((option) => {\r\n      if (option.exact) {\r\n        return url === option.path;\r\n      }\r\n\r\n      return (\r\n        url === option.path ||\r\n        url.startsWith(option.path + '/')\r\n      );\r\n    });\r\n\r\n    if (match) {\r\n      return [match.path];\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const match = (permission) => {\r\n    return permissionChecker.match(permission);\r\n  };\r\n\r\n  const CustomRouterLink = (props) => (\r\n    <div\r\n      style={{\r\n        flexGrow: 1,\r\n      }}\r\n    >\r\n      <Link\r\n        style={{\r\n          textDecoration: 'none',\r\n          color: 'inherit',\r\n        }}\r\n        {...props}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (!menuVisible) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Drawer\r\n      className={classes.drawer}\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      open={true}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <div className={classes.toolbar}></div>\r\n      <List>\r\n        {menus\r\n          .filter((menu) => match(menu.permissionRequired))\r\n          .map((menu) => (\r\n            <CustomRouterLink\r\n              key={menu.path}\r\n              to={menu.path}\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon\r\n                  className={clsx({\r\n                    [classes.listItemIcon]: true,\r\n                    [classes.active]: selectedKeys().includes(\r\n                      menu.path,\r\n                    ),\r\n                  })}\r\n                >\r\n                  {menu.icon}\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  className={clsx({\r\n                    [classes.active]: selectedKeys().includes(\r\n                      menu.path,\r\n                    ),\r\n                  })}\r\n                >\r\n                  {menu.label}\r\n                </ListItemText>\r\n              </ListItem>\r\n            </CustomRouterLink>\r\n          ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport Header from 'src/view/layout/Header';\r\nimport Menu from 'src/view/layout/Menu';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: 'rgba(0, 0, 0, 0.65)',\r\n    backgroundColor: '#f0f2f5',\r\n    display: 'flex',\r\n    fontFamily: `'Roboto', sans-serif`,\r\n\r\n    '& h1, h2, h3, h4, h5, h6': {\r\n      color: 'rgba(0, 0, 0, 0.85)',\r\n    },\r\n  },\r\n\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    minHeight: '100vh',\r\n    overflowX: 'hidden',\r\n  },\r\n\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nfunction Layout(props) {\r\n  const classes = useStyles();\r\n  const match = useRouteMatch();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <Menu url={match.url} />\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar}></div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import PermissionChecker from 'src/modules/auth/permissionChecker';\r\nimport React from 'react';\r\nimport {\r\n  Redirect,\r\n  Route,\r\n  useLocation,\r\n} from 'react-router-dom';\r\nimport Layout from 'src/view/layout/Layout';\r\n\r\nfunction PrivateRoute({\r\n  component: Component,\r\n  currentUser,\r\n  permissionRequired,\r\n  ...rest\r\n}) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const permissionChecker = new PermissionChecker(\r\n          currentUser,\r\n        );\r\n\r\n        if (!permissionChecker.isAuthenticated) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/auth/signin',\r\n                state: { from: location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        if (permissionChecker.isEmptyPermissions) {\r\n          return (\r\n            <Redirect to=\"/auth/empty-permissions\" />\r\n          );\r\n        }\r\n        \r\n        if (!permissionChecker.match(permissionRequired)) {\r\n          return <Redirect to=\"/403\" />;\r\n        }\r\n\r\n        return (\r\n          <Layout {...props}>\r\n            <Component {...props} />\r\n          </Layout>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import PermissionChecker from 'src/modules/auth/permissionChecker';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction PublicRoute({\r\n  component: Component,\r\n  currentUser,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const permissionChecker = new PermissionChecker(\r\n          currentUser,\r\n        );\r\n\r\n        if (permissionChecker.isAuthenticated) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PublicRoute;\r\n","import NProgress from 'nprogress';\r\nimport 'nprogress/nprogress.css';\r\n\r\nNProgress.configure({ showSpinner: false });\r\n\r\nexport default class ProgressBar {\r\n  static start() {\r\n    NProgress.start();\r\n  }\r\n\r\n  static done() {\r\n    NProgress.done();\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport ProgressBar from 'src/view/shared/ProgressBar';\r\n\r\nexport default function LoadingComponent() {\r\n  useEffect(() => {\r\n    ProgressBar.start();\r\n    return () => {\r\n      ProgressBar.done();\r\n    };\r\n  }, []);\r\n\r\n  return <div />;\r\n}\r\n","import React from 'react';\r\nimport LoadingComponent from 'src/view/shared/LoadingComponent';\r\n\r\nexport default function CustomLoadable(opts) {\r\n  const LazyComponent = React.lazy(opts.loader);\r\n\r\n  return (props) => (\r\n    <React.Suspense fallback={<LoadingComponent />}>\r\n      <LazyComponent {...props} />\r\n    </React.Suspense>\r\n  );\r\n}\r\n","import Permissions from 'src/security/permissions';\r\nconst permissions = Permissions.values;\r\n\r\nconst privateRoutes = [\r\n  {\r\n    path: '/',\r\n    loader: () =>\r\n      import('src/view/dashboard/DashboardPage'),\r\n    permissionRequired: null,\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    path: '/user',\r\n    loader: () => import('src/view/user/list/UserPage'),\r\n    permissionRequired: permissions.userRead,\r\n    exact: true,\r\n  },\r\n\r\n  {\r\n    path: '/user/:id',\r\n    loader: () => import('src/view/user/view/UserViewPage'),\r\n    permissionRequired: permissions.userRead,\r\n    exact: true,\r\n  },\r\n].filter(Boolean);\r\n\r\nconst publicRoutes = [\r\n  {\r\n    path: '/auth/signin',\r\n    loader: () => import('src/view/auth/SigninPage'),\r\n  },\r\n].filter(Boolean);\r\n\r\nconst emptyPermissionsRoutes = [\r\n  {\r\n    path: '/auth/empty-permissions',\r\n    loader: () =>\r\n      import('src/view/auth/EmptyPermissionsPage'),\r\n  },\r\n].filter(Boolean);\r\n\r\nconst simpleRoutes = [\r\n  {\r\n    path: '/403',\r\n    loader: () =>\r\n      import('src/view/shared/errors/Error403Page'),\r\n  },\r\n  {\r\n    path: '/500',\r\n    loader: () =>\r\n      import('src/view/shared/errors/Error500Page'),\r\n  },\r\n  {\r\n    path: '**',\r\n    loader: () =>\r\n      import('src/view/shared/errors/Error404Page'),\r\n  },\r\n].filter(Boolean);\r\n\r\nexport default {\r\n  privateRoutes,\r\n  publicRoutes,\r\n  emptyPermissionsRoutes,\r\n  simpleRoutes,\r\n};\r\n","import PermissionChecker from 'src/modules/auth/permissionChecker';\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nfunction EmptyPermissionsRoute({\r\n  component: Component,\r\n  currentUser,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const permissionChecker = new PermissionChecker(\r\n          currentUser,\r\n        );\r\n\r\n        if (!permissionChecker.isAuthenticated) {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/auth/signin',\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        if (!permissionChecker.isEmptyPermissions) {\r\n          return <Redirect to=\"/\" />;\r\n        }\r\n\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EmptyPermissionsRoute;\r\n","import authSelectors from 'src/modules/auth/authSelectors';\r\nimport layoutSelectors from 'src/modules/layout/layoutSelectors';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PrivateRoute from 'src/view/shared/routes/PrivateRoute';\r\nimport PublicRoute from 'src/view/shared/routes/PublicRoute';\r\nimport CustomLoadable from 'src/view/shared/CustomLoadable';\r\nimport ProgressBar from 'src/view/shared/ProgressBar';\r\nimport routes from 'src/view/routes';\r\nimport EmptyPermissionsRoute from 'src/view/shared/routes/EmptyPermissionsRoute';\r\n\r\nfunction RoutesComponent(props) {\r\n  const isInitialMount = useRef(true);\r\n\r\n  const authLoading = useSelector(\r\n    authSelectors.selectLoadingInit,\r\n  );\r\n  const layoutLoading = useSelector(\r\n    layoutSelectors.selectLoading,\r\n  );\r\n  const loading = authLoading || layoutLoading;\r\n  const currentUser = useSelector(\r\n    authSelectors.selectCurrentUser,\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n      ProgressBar.start();\r\n      return;\r\n    }\r\n\r\n    if (!loading) {\r\n      ProgressBar.done();\r\n    }\r\n  }, [loading]);\r\n\r\n  if (loading) {\r\n    return <div />;\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      {routes.publicRoutes.map((route) => (\r\n        <PublicRoute\r\n          key={route.path}\r\n          exact\r\n          path={route.path}\r\n          currentUser={currentUser}\r\n          component={CustomLoadable({\r\n            loader: route.loader,\r\n          })}\r\n        />\r\n      ))}\r\n\r\n      {routes.emptyPermissionsRoutes.map((route) => (\r\n        <EmptyPermissionsRoute\r\n          key={route.path}\r\n          exact\r\n          path={route.path}\r\n          currentUser={currentUser}\r\n          component={CustomLoadable({\r\n            loader: route.loader,\r\n          })}\r\n        />\r\n      ))}\r\n\r\n      {routes.privateRoutes.map((route) => (\r\n        <PrivateRoute\r\n          key={route.path}\r\n          currentUser={currentUser}\r\n          permissionRequired={route.permissionRequired}\r\n          path={route.path}\r\n          component={CustomLoadable({\r\n            loader: route.loader,\r\n          })}\r\n          exact={Boolean(route.exact)}\r\n        />\r\n      ))}\r\n\r\n      {routes.simpleRoutes.map((route) => (\r\n        <Route\r\n          key={route.path}\r\n          exact\r\n          path={route.path}\r\n          component={CustomLoadable({\r\n            loader: route.loader,\r\n          })}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default RoutesComponent;\r\n","import { ConnectedRouter } from 'connected-react-router';\r\nimport {\r\n  configureStore,\r\n  getHistory,\r\n} from 'src/modules/store';\r\nimport React, { useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport RoutesComponent from 'src/view/shared/routes/RoutesComponent';\r\nimport 'typeface-roboto';\r\nimport {\r\n  CssBaseline,\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n} from '@material-ui/core';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\nimport Message from 'src/view/shared/message';\r\n\r\nconst store = configureStore();\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppWithRedux {...props} />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nfunction AppWithRedux(props) {\r\n\r\n  const colors = {\r\n    primary: '#2196f3',\r\n    secondary: '#f50057',\r\n  };\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: colors.primary,\r\n      },\r\n      secondary: {\r\n        main: colors.secondary,\r\n      },\r\n    },\r\n    typography: {\r\n      fontSize: 12.5,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={3}>\r\n        <>\r\n          <CssBaseline />\r\n          <AppWithSnackbar {...props} />\r\n        </>\r\n      </SnackbarProvider>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nfunction AppWithSnackbar(props) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    // this is a little hack to not have to import notistack\r\n    // on all the components that emit messages\r\n    Message.registerNotistakEnqueueSnackbar(\r\n      enqueueSnackbar,\r\n    );\r\n  }, [enqueueSnackbar]);\r\n\r\n  return (\r\n    <>\r\n      <ConnectedRouter history={getHistory()}>\r\n        <RoutesComponent />\r\n      </ConnectedRouter>\r\n    </>\r\n  );\r\n}\r\n","import Message from 'src/view/shared/message';\r\nimport { getHistory } from 'src/modules/store';\r\nimport { i18n, i18nExists } from 'src/i18n';\r\nimport authService from 'src/modules/auth/authService';\r\n\r\nconst DEFAULT_ERROR_MESSAGE = i18n(\r\n  'errors.defaultErrorMessage',\r\n);\r\n\r\nfunction selectErrorKeyOrMessage(error) {\r\n  if (error && error.response && error.response.data) {\r\n    const data = error.response.data;\r\n\r\n    if (data.error && data.error.message) {\r\n      return data.error.message;\r\n    }\r\n\r\n    return String(data);\r\n  }\r\n\r\n  return error.message || DEFAULT_ERROR_MESSAGE;\r\n}\r\n\r\nfunction selectErrorMessage(error) {\r\n  const key = selectErrorKeyOrMessage(error);\r\n\r\n  if (i18nExists(key)) {\r\n    return i18n(key);\r\n  }\r\n\r\n  return key;\r\n}\r\n\r\nfunction selectErrorCode(error) {\r\n  if (error && error.response && error.response.status) {\r\n    return error.response.status;\r\n  }\r\n\r\n  return 500;\r\n}\r\n\r\nexport default class Errors {\r\n  static handle(error) {\r\n    if (process.env.NODE_ENV !== 'test') {\r\n      console.error(selectErrorMessage(error));\r\n      console.error(error);\r\n    }\r\n\r\n    if (selectErrorCode(error) === 401) {\r\n      authService.signout();\r\n      (window as any).location.reload();\r\n      return;\r\n    }\r\n\r\n    if (selectErrorCode(error) === 403) {\r\n      getHistory().push('/403');\r\n      return;\r\n    }\r\n\r\n    if ([400, 429].includes(selectErrorCode(error))) {\r\n      Message.error(selectErrorMessage(error));\r\n      return;\r\n    }\r\n\r\n    getHistory().push('/500');\r\n  }\r\n\r\n  static errorCode(error) {\r\n    return selectErrorCode(error);\r\n  }\r\n\r\n  static selectMessage(error) {\r\n    return selectErrorMessage(error);\r\n  }\r\n\r\n  static showMessage(error) {\r\n    Message.error(selectErrorMessage(error));\r\n  }\r\n}\r\n","import UserService from 'src/modules/user/userService';\r\nimport selectors from 'src/modules/user/list/userListSelectors';\r\nimport Errors from 'src/modules/shared/error/errors';\r\nimport Message from 'src/view/shared/message';\r\nimport { i18n } from 'src/i18n';\r\n\r\nconst prefix = 'USER_LIST';\r\n\r\nconst userListActions = {\r\n  FETCH_STARTED: `${prefix}_FETCH_STARTED`,\r\n  FETCH_SUCCESS: `${prefix}_FETCH_SUCCESS`,\r\n  FETCH_ERROR: `${prefix}_FETCH_ERROR`,\r\n\r\n  RESETED: `${prefix}_RESETED`,\r\n  TOGGLE_ONE_SELECTED: `${prefix}_TOGGLE_ONE_SELECTED`,\r\n  TOGGLE_ALL_SELECTED: `${prefix}_TOGGLE_ALL_SELECTED`,\r\n  CLEAR_ALL_SELECTED: `${prefix}_CLEAR_ALL_SELECTED`,\r\n\r\n  PAGINATION_CHANGED: `${prefix}_PAGINATION_CHANGED`,\r\n  SORTER_CHANGED: `${prefix}_SORTER_CHANGED`,\r\n\r\n  DESTROY_ALL_SELECTED_STARTED: `${prefix}_DESTROY_ALL_SELECTED_STARTED`,\r\n  DESTROY_ALL_SELECTED_SUCCESS: `${prefix}_DESTROY_ALL_SELECTED_SUCCESS`,\r\n  DESTROY_ALL_SELECTED_ERROR: `${prefix}_DESTROY_ALL_SELECTED_ERROR`,\r\n\r\n  DESTROY_STARTED: `${prefix}_DESTROY_STARTED`,\r\n  DESTROY_SUCCESS: `${prefix}_DESTROY_SUCCESS`,\r\n  DESTROY_ERROR: `${prefix}_DESTROY_ERROR`,\r\n\r\n  doClearAllSelected() {\r\n    return {\r\n      type: userListActions.CLEAR_ALL_SELECTED,\r\n    };\r\n  },\r\n\r\n  doToggleAllSelected() {\r\n    return {\r\n      type: userListActions.TOGGLE_ALL_SELECTED,\r\n    };\r\n  },\r\n\r\n  doToggleOneSelected(id) {\r\n    return {\r\n      type: userListActions.TOGGLE_ONE_SELECTED,\r\n      payload: id,\r\n    };\r\n  },\r\n\r\n  doReset: () => async (dispatch) => {\r\n    dispatch({\r\n      type: userListActions.RESETED,\r\n    });\r\n\r\n    dispatch(userListActions.doFetch());\r\n  },\r\n\r\n  doChangePagination: (pagination) => async (\r\n    dispatch,\r\n    getState,\r\n  ) => {\r\n    dispatch({\r\n      type: userListActions.PAGINATION_CHANGED,\r\n      payload: pagination,\r\n    });\r\n\r\n    dispatch(userListActions.doFetchCurrentFilter());\r\n  },\r\n\r\n  doChangeSort: (sorter) => async (dispatch, getState) => {\r\n    dispatch({\r\n      type: userListActions.SORTER_CHANGED,\r\n      payload: sorter,\r\n    });\r\n\r\n    dispatch(userListActions.doFetchCurrentFilter());\r\n  },\r\n\r\n  doFetchCurrentFilter: () => async (\r\n    dispatch,\r\n    getState,\r\n  ) => {\r\n    const filter = selectors.selectFilter(getState());\r\n    const rawFilter = selectors.selectRawFilter(getState());\r\n    dispatch(userListActions.doFetch(filter, rawFilter, true));\r\n  },\r\n\r\n  doFetch: (filter?, rawFilter?, keepPagination = false) => async (\r\n    dispatch,\r\n    getState,\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: userListActions.FETCH_STARTED,\r\n        payload: { filter, rawFilter, keepPagination },\r\n      });\r\n\r\n      const response = await UserService.fetchUsers(\r\n        filter,\r\n        selectors.selectOrderBy(getState()),\r\n        selectors.selectLimit(getState()),\r\n        selectors.selectOffset(getState()),\r\n      );\r\ndebugger;\r\n      dispatch({\r\n        type: userListActions.FETCH_SUCCESS,\r\n        payload: {\r\n          rows: response.rows,\r\n          count: response.count,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userListActions.FETCH_ERROR,\r\n      });\r\n    }\r\n  },\r\n\r\n  doDestroy: (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: userListActions.DESTROY_STARTED,\r\n      });\r\n\r\n      await UserService.destroy([id]);\r\n\r\n      dispatch({\r\n        type: userListActions.DESTROY_SUCCESS,\r\n      });\r\n\r\n      Message.success(i18n('user.doDestroySuccess'));\r\n\r\n      dispatch(userListActions.doFetchCurrentFilter());\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userListActions.DESTROY_ERROR,\r\n      });\r\n\r\n      dispatch(userListActions.doFetchCurrentFilter());\r\n    }\r\n  },\r\n\r\n  doDestroyAllSelected: () => async (\r\n    dispatch,\r\n    getState,\r\n  ) => {\r\n    try {\r\n      const selectedRows = selectors.selectSelectedRows(\r\n        getState(),\r\n      );\r\n\r\n      dispatch({\r\n        type: userListActions.DESTROY_ALL_SELECTED_STARTED,\r\n      });\r\n\r\n      await UserService.destroy(\r\n        selectedRows.map((row) => row.id),\r\n      );\r\n\r\n      dispatch({\r\n        type: userListActions.DESTROY_ALL_SELECTED_SUCCESS,\r\n      });\r\n\r\n      Message.success(\r\n        i18n('user.doDestroyAllSelectedSuccess'),\r\n      );\r\n\r\n      dispatch(userListActions.doFetchCurrentFilter());\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userListActions.DESTROY_ALL_SELECTED_ERROR,\r\n      });\r\n\r\n      dispatch(userListActions.doFetchCurrentFilter());\r\n    }\r\n  },\r\n};\r\n\r\nexport default userListActions;\r\n","let notistakEnqueueSnackbar;\r\n\r\nexport default class Message {\r\n  static registerNotistakEnqueueSnackbar(instance) {\r\n    notistakEnqueueSnackbar = instance;\r\n  }\r\n\r\n  static success(arg) {\r\n    notistakEnqueueSnackbar(arg);\r\n  }\r\n\r\n  static error(arg) {\r\n    notistakEnqueueSnackbar(arg, { variant: 'error' });\r\n  }\r\n}\r\n","import { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport initializers from 'src/modules/initializers';\r\nimport createRootReducer from 'src/modules/reducers';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nlet store;\r\n\r\nexport function configureStore(preloadedState?) {\r\n  const middlewares = [\r\n    thunkMiddleware,\r\n    routerMiddleware(history),\r\n  ].filter(Boolean);\r\n\r\n  store = createStore(\r\n    createRootReducer(history),\r\n    preloadedState,\r\n    composeWithDevTools(applyMiddleware(...middlewares)),\r\n  );\r\n\r\n  for (const initializer of initializers) {\r\n    initializer(store);\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport function getHistory() {\r\n  return history;\r\n}\r\n\r\nexport default function getStore() {\r\n  return store;\r\n}\r\n","import authInitializer from 'src/modules/auth/authInitializer';\r\n\r\nexport default [authInitializer];\r\n","import actions from 'src/modules/auth/authActions';\r\n\r\nexport default (store) => {\r\n  store.dispatch(actions.doInit());\r\n};\r\n","import actions from 'src/modules/layout/layoutActions';\r\nimport { getLanguageCode } from 'src/i18n';\r\n\r\nconst initialData = {\r\n  menuVisible: true,\r\n  language: getLanguageCode(),\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initialData, { type, payload }) => {\r\n  if (type === actions.MENU_TOGGLE) {\r\n    return {\r\n      ...state,\r\n      menuVisible: !state.menuVisible,\r\n    };\r\n  }\r\n\r\n  if (type === actions.MENU_SHOW) {\r\n    return {\r\n      ...state,\r\n      menuVisible: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.MENU_HIDE) {\r\n    return {\r\n      ...state,\r\n      menuVisible: false,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import actions from 'src/modules/auth/authActions';\r\n\r\nconst initialData = {\r\n  currentUser: null,\r\n  loadingInit: true,\r\n  loadingUpdateProfile: false,\r\n  loading: false,\r\n  errorMessage: null,\r\n  errorMessageVerifyEmail: null,\r\n};\r\n\r\nexport default (state = initialData, { type, payload }) => {\r\n  if (type === actions.ERROR_MESSAGE_CLEARED) {\r\n    return {\r\n      ...state,\r\n      errorMessage: null,\r\n    };\r\n  }\r\n\r\n  if (type === actions.CURRENT_USER_REFRESH_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      currentUser: payload.currentUser || null,\r\n    };\r\n  }\r\n\r\n  if (type === actions.CURRENT_USER_REFRESH_ERROR) {\r\n    return {\r\n      ...state,\r\n      currentUser: null,\r\n    };\r\n  }\r\n\r\n  if (type === actions.AUTH_START) {\r\n    return {\r\n      ...state,\r\n      errorMessage: null,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.AUTH_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      currentUser: payload.currentUser || null,\r\n      errorMessage: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.AUTH_ERROR) {\r\n    return {\r\n      ...state,\r\n      currentUser: null,\r\n      errorMessage: payload || null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_PROFILE_START) {\r\n    return {\r\n      ...state,\r\n      loadingUpdateProfile: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_PROFILE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      loadingUpdateProfile: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_PROFILE_ERROR) {\r\n    return {\r\n      ...state,\r\n      loadingUpdateProfile: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.AUTH_INIT_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      currentUser: payload.currentUser || null,\r\n      loadingInit: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.AUTH_INIT_ERROR) {\r\n    return {\r\n      ...state,\r\n      currentUser: null,\r\n      loadingInit: false,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import actions from 'src/modules/user/list/userListActions';\r\n\r\nconst INITIAL_PAGE_SIZE = 10;\r\n\r\nconst initialData = {\r\n  rows: [] as Array<any>,\r\n  count: 0,\r\n  loading: false,\r\n  filter: {},\r\n  rawFilter: {},\r\n  pagination: {\r\n    current: 1,\r\n    pageSize: INITIAL_PAGE_SIZE,\r\n  },\r\n  sorter: {},\r\n  selectedKeys: [] as Array<any>,\r\n};\r\n\r\nexport default (state = initialData, { type, payload }) => {\r\n  if (type === actions.RESETED) {\r\n    return {\r\n      ...initialData,\r\n    };\r\n  }\r\n\r\n  if (type === actions.TOGGLE_ONE_SELECTED) {\r\n    let selectedKeys = state.selectedKeys;\r\n\r\n    const exists = selectedKeys.includes(payload);\r\n\r\n    if (exists) {\r\n      selectedKeys = selectedKeys.filter(\r\n        (key) => key !== payload,\r\n      );\r\n    } else {\r\n      selectedKeys = [payload, ...selectedKeys];\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      selectedKeys,\r\n    };\r\n  }\r\n\r\n  if (type === actions.TOGGLE_ALL_SELECTED) {\r\n    const isAllSelected =\r\n      (state.rows || []).length ===\r\n      (state.selectedKeys || []).length;\r\n\r\n    return {\r\n      ...state,\r\n      selectedKeys: isAllSelected\r\n        ? []\r\n        : state.rows.map((row) => row.id),\r\n    };\r\n  }\r\n\r\n  if (type === actions.CLEAR_ALL_SELECTED) {\r\n    return {\r\n      ...state,\r\n      selectedKeys: [],\r\n    };\r\n  }\r\n\r\n  if (type === actions.PAGINATION_CHANGED) {\r\n    return {\r\n      ...state,\r\n      pagination: payload || {\r\n        current: 1,\r\n        pageSize: INITIAL_PAGE_SIZE,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (type === actions.SORTER_CHANGED) {\r\n    return {\r\n      ...state,\r\n      sorter: payload || {},\r\n    };\r\n  }\r\n\r\n  if (type === actions.FETCH_STARTED) {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n      selectedKeys: [],\r\n      filter: payload ? payload.filter : {},\r\n      rawFilter: payload ? payload.rawFilter : {},\r\n      pagination:\r\n        payload && payload.keepPagination\r\n          ? state.pagination\r\n          : {\r\n              current: 1,\r\n              pageSize: INITIAL_PAGE_SIZE,\r\n            },\r\n    };\r\n  }\r\n\r\n  if (type === actions.FETCH_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      rows: payload.rows,\r\n      count: payload.count,\r\n    };\r\n  }\r\n\r\n  if (type === actions.FETCH_ERROR) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n      rows: [],\r\n      count: 0,\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_ALL_SELECTED_STARTED) {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_ALL_SELECTED_ERROR) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_ALL_SELECTED_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      selectedKeys: [],\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_STARTED) {\r\n    return {\r\n      ...state,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_ERROR) {\r\n    return {\r\n      ...state,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.DESTROY_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      selectedKeys: [],\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import Errors from 'src/modules/shared/error/errors';\r\nimport Message from 'src/view/shared/message';\r\nimport UserService from 'src/modules/user/userService';\r\nimport { getHistory } from 'src/modules/store';\r\nimport { i18n } from 'src/i18n';\r\nimport authSelectors from 'src/modules/auth/authSelectors';\r\nimport authActions from 'src/modules/auth/authActions';\r\n\r\nconst prefix = 'USER_FORM';\r\n\r\nconst userFormActions = {\r\n  INIT_STARTED: `${prefix}_INIT_STARTED`,\r\n  INIT_SUCCESS: `${prefix}_INIT_SUCCESS`,\r\n  INIT_ERROR: `${prefix}_INIT_ERROR`,\r\n\r\n  ADD_STARTED: `${prefix}_ADD_STARTED`,\r\n  ADD_SUCCESS: `${prefix}_ADD_SUCCESS`,\r\n  ADD_ERROR: `${prefix}_ADD_ERROR`,\r\n\r\n  UPDATE_STARTED: `${prefix}_UPDATE_STARTED`,\r\n  UPDATE_SUCCESS: `${prefix}_UPDATE_SUCCESS`,\r\n  UPDATE_ERROR: `${prefix}_UPDATE_ERROR`,\r\n\r\n  doInit: (id?) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: userFormActions.INIT_STARTED,\r\n      });\r\n\r\n      const isEdit = Boolean(id);\r\n      let record = {};\r\n\r\n      if (isEdit) {\r\n        record = await UserService.find(id);\r\n      }\r\n\r\n      dispatch({\r\n        type: userFormActions.INIT_SUCCESS,\r\n        payload: record,\r\n      });\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userFormActions.INIT_ERROR,\r\n      });\r\n\r\n      getHistory().push('/user');\r\n    }\r\n  },\r\n\r\n  doAdd: (values) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: userFormActions.ADD_STARTED,\r\n      });\r\n\r\n      await UserService.create(values);\r\n\r\n      dispatch({\r\n        type: userFormActions.ADD_SUCCESS,\r\n      });\r\n\r\n      Message.success(i18n('user.doAddSuccess'));\r\n\r\n      getHistory().push('/user');\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userFormActions.ADD_ERROR,\r\n      });\r\n    }\r\n  },\r\n\r\n  doUpdate: (values) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: userFormActions.UPDATE_STARTED,\r\n      });\r\n\r\n      await UserService.edit(values);\r\n\r\n      dispatch({\r\n        type: userFormActions.UPDATE_SUCCESS,\r\n      });\r\n\r\n      const currentUser = authSelectors.selectCurrentUser(\r\n        getState(),\r\n      );\r\n\r\n      if (currentUser.id === values.id) {\r\n        await dispatch(authActions.doRefreshCurrentUser());\r\n      }\r\n\r\n      Message.success(i18n('user.doUpdateSuccess'));\r\n\r\n      getHistory().push('/user');\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userFormActions.UPDATE_ERROR,\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nexport default userFormActions;\r\n","import actions from 'src/modules/user/form/userFormActions';\r\n\r\nconst initialData = {\r\n  initLoading: false,\r\n  saveLoading: false,\r\n  user: null,\r\n};\r\n\r\nexport default (state = initialData, { type, payload }) => {\r\n  if (type === actions.INIT_STARTED) {\r\n    return {\r\n      ...state,\r\n      user: null,\r\n      initLoading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.INIT_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      user: payload,\r\n      initLoading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.INIT_ERROR) {\r\n    return {\r\n      ...state,\r\n      user: null,\r\n      initLoading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.ADD_STARTED) {\r\n    return {\r\n      ...state,\r\n      saveLoading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.ADD_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      saveLoading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.ADD_ERROR) {\r\n    return {\r\n      ...state,\r\n      saveLoading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_STARTED) {\r\n    return {\r\n      ...state,\r\n      saveLoading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      saveLoading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.UPDATE_ERROR) {\r\n    return {\r\n      ...state,\r\n      saveLoading: false,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import actions from 'src/modules/user/view/userViewActions';\r\n\r\nconst initialData = {\r\n  loading: false,\r\n  user: null,\r\n};\r\n\r\nexport default (state = initialData, { type, payload }) => {\r\n  if (type === actions.FIND_STARTED) {\r\n    return {\r\n      ...state,\r\n      user: null,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  if (type === actions.FIND_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      user: payload,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  if (type === actions.FIND_ERROR) {\r\n    return {\r\n      ...state,\r\n      user: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n","import list from 'src/modules/user/list/userListReducers';\r\nimport form from 'src/modules/user/form/userFormReducers';\r\nimport view from 'src/modules/user/view/userViewReducers';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  list,\r\n  form,\r\n  view,\r\n});\r\n","import { connectRouter } from 'connected-react-router';\r\nimport layout from 'src/modules/layout/layoutReducers';\r\nimport auth from 'src/modules/auth/authReducers';\r\nimport user from 'src/modules/user/userReducers';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    layout,\r\n    auth,\r\n    user,\r\n  });\r\n","import authAxios from 'src/modules/shared/axios/authAxios';\r\nimport { AuthToken } from 'src/modules/auth/authToken';\r\n\r\nexport default class AuthService {\r\n\r\n  static async signinWithEmailAndPassword(email, password) {\r\n\r\n    const response = await authAxios.post('/auth/sign-in', {\r\n      email,\r\n      password,\r\n    });\r\n\r\n    return response.data;\r\n  }\r\n\r\n  static async fetchMe() {\r\n    const response = await authAxios.get('/auth/me');\r\n    return response.data;\r\n  }\r\n\r\n  static signout() {\r\n    AuthToken.set(null, true);\r\n  }\r\n\r\n  static async updateProfile(data) {\r\n    const body = {\r\n      data,\r\n    };\r\n\r\n    const response = await authAxios.put(\r\n      '/auth/profile',\r\n      body,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n  \r\n}\r\n","import { AuthToken } from 'src/modules/auth/authToken';\r\nimport Axios from 'axios';\r\nimport config from 'src/config';\r\nimport { getLanguageCode } from 'src/i18n';\r\nimport Qs from 'qs';\r\nimport moment from 'moment';\r\n\r\nconst authAxios = Axios.create({\r\n  baseURL: config.backendUrl,\r\n  paramsSerializer: function (params) {\r\n    return Qs.stringify(params, {\r\n      arrayFormat: 'brackets',\r\n      filter: (prefix, value) => {\r\n        if (\r\n          moment.isMoment(value) ||\r\n          value instanceof Date\r\n        ) {\r\n          return value.toISOString();\r\n        }\r\n\r\n        return value;\r\n      },\r\n    });\r\n  },\r\n});\r\n\r\nauthAxios.interceptors.request.use(\r\n  async function (options) {\r\n    const token = AuthToken.get();\r\n\r\n    if (token) {\r\n      options.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    options.headers['Accept-Language'] = getLanguageCode();\r\n\r\n    return options;\r\n  },\r\n  function (error) {\r\n    console.log('Request error: ', error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default authAxios;\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectRaw = (state) => state.auth;\r\n\r\nconst selectAuthenticationUser = createSelector(\r\n  [selectRaw],\r\n  (auth) => auth.authenticationUser,\r\n);\r\n\r\nconst selectCurrentUser = createSelector(\r\n  [selectRaw],\r\n  (auth) => auth.currentUser,\r\n);\r\n\r\nconst selectCurrentUserEmail = createSelector(\r\n  [selectCurrentUser],\r\n  (currentUser) => (currentUser ? currentUser.email : null),\r\n);\r\n\r\nconst selectCurrentUserFullName = createSelector(\r\n  [selectCurrentUser],\r\n  (currentUser) =>\r\n    currentUser ? currentUser.fullName : '',\r\n);\r\n\r\nconst selectSignedIn = createSelector(\r\n  [selectCurrentUser],\r\n  (currentUser) =>\r\n    Boolean(currentUser) && Boolean(currentUser.id),\r\n);\r\n\r\nconst selectLoading = createSelector([selectRaw], (auth) =>\r\n  Boolean(auth.loading),\r\n);\r\n\r\nconst selectLoadingInit = createSelector(\r\n  [selectRaw],\r\n  (auth) => Boolean(auth.loadingInit),\r\n);\r\n\r\nconst selectLoadingUpdateProfile = createSelector(\r\n  [selectRaw],\r\n  (auth) => Boolean(auth.loadingUpdateProfile),\r\n);\r\n\r\nconst selectErrorMessage = createSelector(\r\n  [selectRaw],\r\n  (auth) => auth.errorMessage,\r\n);\r\n\r\nconst selectCurrentUserNameOrEmailPrefix = createSelector(\r\n  [selectCurrentUser, selectCurrentUserFullName],\r\n  (currentUser, fullName) => {\r\n    if (!currentUser) {\r\n      return '';\r\n    }\r\n\r\n    if (fullName && fullName.length < 25) {\r\n      return fullName;\r\n    }\r\n\r\n    if (currentUser.firstName) {\r\n      return currentUser.firstName;\r\n    }\r\n\r\n    return currentUser.email.split('@')[0];\r\n  },\r\n);\r\n\r\nconst selectCurrentUserAvatar = createSelector(\r\n  [selectCurrentUser],\r\n  (currentUser) => {\r\n    if (\r\n      !currentUser ||\r\n      !currentUser.avatars ||\r\n      !currentUser.avatars.length ||\r\n      !currentUser.avatars[0].downloadUrl\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return currentUser.avatars[0].downloadUrl;\r\n  },\r\n);\r\n\r\n\r\nconst authSelectors = {\r\n  selectLoadingInit,\r\n  selectLoadingUpdateProfile,\r\n  selectLoading,\r\n  selectSignedIn,\r\n  selectCurrentUserFullName,\r\n  selectCurrentUserEmail,\r\n  selectCurrentUser,\r\n  selectAuthenticationUser,\r\n  selectErrorMessage,\r\n  selectRaw,\r\n  selectCurrentUserNameOrEmailPrefix,\r\n  selectCurrentUserAvatar,\r\n};\r\n\r\nexport default authSelectors;\r\n","let inMemoryToken = null;\r\n\r\nexport class AuthToken {\r\n  static get() {\r\n    return (\r\n      inMemoryToken || localStorage.getItem('jwt') || null\r\n    );\r\n  }\r\n\r\n  static set(token, rememberMe) {\r\n    if (rememberMe) {\r\n      localStorage.setItem('jwt', token || '');\r\n    } else {\r\n      inMemoryToken = token;\r\n      localStorage.setItem('jwt', '');\r\n    }\r\n  }\r\n\r\n  static applyFromLocationUrlIfExists() {\r\n    const urlParams = new URLSearchParams(\r\n      window.location.search,\r\n    );\r\n    const authToken = urlParams.get('authToken');\r\n\r\n    if (!authToken) {\r\n      return;\r\n    }\r\n\r\n    this.set(authToken, true);\r\n    window.history.replaceState(\r\n      {},\r\n      document.title,\r\n      window.location.origin,\r\n    );\r\n  }\r\n}\r\n","import authAxios from 'src/modules/shared/axios/authAxios';\r\n\r\nexport default class UserService {\r\n  static async edit(data) {\r\n    const body = {\r\n      data,\r\n    };\r\n\r\n    const response = await authAxios.put(\r\n      `/user`,\r\n      body,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  static async destroy(ids) {\r\n    const params = {\r\n      ids,\r\n    };\r\n\r\n    const response = await authAxios.delete(\r\n      `/user`,\r\n      {\r\n        params,\r\n      },\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  static async create(data) {\r\n    const body = {\r\n      data,\r\n    };\r\n\r\n    const response = await authAxios.post(\r\n      `/user`,\r\n      body,\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  static async find(id) {\r\n    const response = await authAxios.get(\r\n      `/user/${id}`,\r\n    );\r\n    return response.data;\r\n  }\r\n\r\n  static async fetchUsers(filter, orderBy, limit, offset) {\r\n    const params = {\r\n      filter,\r\n      sort: orderBy,\r\n      size: limit,\r\n      page: offset,\r\n    };\r\n\r\n    const response = await authAxios.get(\r\n      `/user/`,\r\n      {\r\n        params,\r\n      },\r\n    );\r\n\r\n    return response.data;\r\n  }\r\n\r\n  static async fetchUserAutocomplete(query, limit) {\r\n    const params = {\r\n      query,\r\n      limit,\r\n    };\r\n\r\n    const response = await authAxios.get(\r\n      `/user/autocomplete`,\r\n      {\r\n        params,\r\n      },\r\n    );\r\n    return response.data;\r\n  }\r\n}\r\n","import { setLanguageCode } from 'src/i18n';\r\n\r\nconst prefix = 'LAYOUT';\r\n\r\nconst layoutActions = {\r\n  MENU_TOGGLE: `${prefix}_MENU_TOGGLE`,\r\n  MENU_HIDE: `${prefix}_MENU_HIDE`,\r\n  MENU_SHOW: `${prefix}_MENU_SHOW`,\r\n\r\n  doChangeLanguage: (language) => {\r\n    setLanguageCode(language);\r\n\r\n    /**\r\n     * I18n is outside Redux store,\r\n     * no we need this hack to load it properly\r\n     */\r\n    (window as any).location.reload();\r\n  },\r\n\r\n  doToggleMenu: () => {\r\n    return {\r\n      type: layoutActions.MENU_TOGGLE,\r\n    };\r\n  },\r\n\r\n  doShowMenu: () => {\r\n    return {\r\n      type: layoutActions.MENU_SHOW,\r\n    };\r\n  },\r\n\r\n  doHideMenu: () => {\r\n    return {\r\n      type: layoutActions.MENU_HIDE,\r\n    };\r\n  },\r\n};\r\n\r\nexport default layoutActions;\r\n","export default class PermissionChecker {\r\n  currentUser;\r\n\r\n  constructor(currentUser) {\r\n    this.currentUser = currentUser;\r\n  }\r\n\r\n  get currentUserRolesIds() {\r\n    if (!this.currentUser) {\r\n      return [];\r\n    }\r\n    return this.currentUser.roles.map((roles) =>  roles.name);\r\n  }\r\n\r\n  match(permission) {\r\n    if (!permission) {\r\n      return true;\r\n    }\r\n    return this.rolesMatchOneOf(permission.allowedRoles);\r\n  }\r\n\r\n  rolesMatchOneOf(arg) {\r\n    if (!this.currentUserRolesIds) {\r\n      return false;\r\n    }\r\n\r\n    if (!arg) {\r\n      return false;\r\n    }\r\n\r\n    if (Array.isArray(arg)) {\r\n      if (!arg.length) {\r\n        return false;\r\n      }\r\n\r\n      return arg.some((role) =>\r\n        this.currentUserRolesIds.includes(role),\r\n      );\r\n    }\r\n\r\n    return this.currentUserRolesIds.includes(arg);\r\n  }\r\n\r\n  get isEmptyPermissions() {\r\n    if (!this.isAuthenticated) {\r\n      return true;\r\n    }\r\n\r\n    return !this.currentUser.roles || !this.currentUser.roles.length;\r\n  }\r\n\r\n  get isAuthenticated() {\r\n    return (\r\n      Boolean(this.currentUser) &&\r\n      Boolean(this.currentUser.id)\r\n    );\r\n  }\r\n}","import { createSelector } from 'reselect';\r\n\r\nconst selectRaw = (state) => state.user.list;\r\n\r\nconst selectLoading = createSelector(\r\n  [selectRaw],\r\n  (raw) => raw.loading,\r\n);\r\n\r\nconst selectRows = createSelector(\r\n  [selectRaw],\r\n  (raw) => raw.rows,\r\n);\r\n\r\nconst selectCount = createSelector(\r\n  [selectRaw],\r\n  (raw) => raw.count,\r\n);\r\n\r\nconst selectHasRows = createSelector(\r\n  [selectCount],\r\n  (count) => count > 0,\r\n);\r\n\r\nconst selectSorter = createSelector(\r\n  [selectRaw],\r\n  (raw) => raw.sorter || {},\r\n);\r\n\r\nconst selectOrderBy = createSelector([selectRaw], (raw) => {\r\n  const sorter = raw.sorter;\r\n\r\n  if (!sorter) {\r\n    return null;\r\n  }\r\n\r\n  if (!sorter.field) {\r\n    return null;\r\n  }\r\n\r\n  let direction = sorter.order === 'desc' ? 'DESC' : 'ASC';\r\n\r\n  return `${sorter.field},${direction}`;\r\n});\r\n\r\nconst selectFilter = createSelector([selectRaw], (raw) => {\r\n  return raw.filter;\r\n});\r\n\r\nconst selectRawFilter = createSelector(\r\n  [selectRaw],\r\n  (raw) => {\r\n    return raw.rawFilter;\r\n  },\r\n);\r\n\r\nconst selectLimit = createSelector([selectRaw], (raw) => {\r\n  const pagination = raw.pagination;\r\n  return pagination.pageSize;\r\n});\r\n\r\nconst selectOffset = createSelector([selectRaw], (raw) => {\r\n  const pagination = raw.pagination;\r\n\r\n  if (!pagination || !pagination.pageSize) {\r\n    return 0;\r\n  }\r\n\r\n  const current = pagination.current || 1;\r\n\r\n  return (current - 1) * pagination.pageSize;\r\n});\r\n\r\nconst selectPagination = createSelector(\r\n  [selectRaw, selectCount],\r\n  (raw, count) => {\r\n    return {\r\n      ...raw.pagination,\r\n      total: count,\r\n    };\r\n  },\r\n);\r\n\r\nconst selectSelectedKeys = createSelector(\r\n  [selectRaw],\r\n  (raw) => {\r\n    return raw.selectedKeys;\r\n  },\r\n);\r\n\r\nconst selectSelectedRows = createSelector(\r\n  [selectRaw, selectRows],\r\n  (raw, rows) => {\r\n    return rows.filter((row) =>\r\n      raw.selectedKeys.includes(row.id),\r\n    );\r\n  },\r\n);\r\n\r\nconst selectIsAllSelected = createSelector(\r\n  [selectRows, selectSelectedKeys],\r\n  (rows, selectedKeys) => {\r\n    return rows.length === selectedKeys.length;\r\n  },\r\n);\r\n\r\nconst userListSelectors = {\r\n  selectLoading,\r\n  selectRows,\r\n  selectCount,\r\n  selectOrderBy,\r\n  selectLimit,\r\n  selectFilter,\r\n  selectOffset,\r\n  selectPagination,\r\n  selectSelectedKeys,\r\n  selectSelectedRows,\r\n  selectHasRows,\r\n  selectRawFilter,\r\n  selectIsAllSelected,\r\n  selectSorter,\r\n};\r\n\r\nexport default userListSelectors;\r\n","const config = require(`./${\r\n  process.env.REACT_APP_ENVIRONMENT\r\n}`).default;\r\n\r\nexport default config;\r\n","import Roles from 'src/security/roles';\r\n\r\nconst roles = Roles.values;\r\n\r\nclass Permissions {\r\n  static get values() {\r\n    return {\r\n      userEdit: {\r\n        id: 'userEdit',\r\n        allowedRoles: [roles.admin],\r\n      },\r\n      userRead: {\r\n        id: 'userRead',\r\n        allowedRoles: [roles.admin],\r\n      },\r\n      userDestroy: {\r\n        id: 'userDestroy',\r\n        allowedRoles: [roles.admin],\r\n      },\r\n      userCreate: {\r\n        id: 'userCreate',\r\n        allowedRoles: [roles.admin],\r\n      },\r\n      userAutocomplete: {\r\n        id: 'userAutocomplete',\r\n        allowedRoles: [roles.admin, roles.custom],\r\n      },\r\n    };\r\n  }\r\n\r\n  static get asArray() {\r\n    return Object.keys(this.values).map((value) => {\r\n      return this.values[value];\r\n    });\r\n  }\r\n}\r\n\r\nexport default Permissions;\r\n","import Errors from 'src/modules/shared/error/errors';\r\nimport { getHistory } from 'src/modules/store';\r\nimport UserService from 'src/modules/user/userService';\r\n\r\nconst prefix = 'USER_VIEW';\r\n\r\nconst userViewActions = {\r\n  FIND_STARTED: `${prefix}_FIND_STARTED`,\r\n  FIND_SUCCESS: `${prefix}_FIND_SUCCESS`,\r\n  FIND_ERROR: `${prefix}_FIND_ERROR`,\r\n\r\n  doFind: (id) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: userViewActions.FIND_STARTED,\r\n      });\r\n\r\n      const user = await UserService.find(id);\r\n\r\n      dispatch({\r\n        type: userViewActions.FIND_SUCCESS,\r\n        payload: user,\r\n      });\r\n    } catch (error) {\r\n      Errors.handle(error);\r\n\r\n      dispatch({\r\n        type: userViewActions.FIND_ERROR,\r\n      });\r\n\r\n      getHistory().push('/user');\r\n    }\r\n  },\r\n};\r\n\r\nexport default userViewActions;\r\n"],"sourceRoot":""}