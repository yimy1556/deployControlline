{"version":3,"sources":["view/shared/form/formErrors.tsx","view/shared/form/items/InputFormItem.tsx","view/auth/styles/Content.tsx","view/auth/styles/Logo.tsx","view/auth/styles/Wrapper.tsx","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","modules/shared/yup/yupFormSchemas.tsx","view/auth/SigninPage.tsx"],"names":["FormErrors","name","errors","touched","isSubmitted","externalErrorMessage","fieldErrors","message","InputFormItem","props","label","hint","type","placeholder","autoFocus","autoComplete","required","disabled","endAdornment","useFormContext","register","formState","errorMessage","id","inputRef","onChange","event","target","value","onBlur","margin","fullWidth","variant","size","undefined","InputLabelProps","shrink","error","Boolean","helperText","InputProps","inputProps","defaultProps","Content","styled","theme","width","height","minHeight","overflowY","zIndex","position","display","flexDirection","padding","backgroundColor","breakpoints","down","borderLeft","Logo","div","Wrapper","justifyContent","alignItems","backgroundSize","content","top","FormControlLabel","React","ref","checked","classes","className","control","disabledProp","_props$labelPlacement","labelPlacement","other","_objectWithoutProperties","muiFormControl","useFormControl","controlProps","forEach","key","_extends","clsx","root","concat","capitalize","Typography","component","withStyles","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","color","palette","text","yupFormSchemas","generic","yup","string","config","yupChain","transform","cv","ov","nullable","trim","min","max","matches","boolean","default","relationToOne","originalValue","stringArray","compact","ensure","of","relationToMany","length","map","item","integer","images","files","enumerator","oneOf","options","i18n","email","decimal","datetime","moment","format","date","test","isValid","schema","shape","password","rememberMe","SigninPage","dispatch","useDispatch","loading","useSelector","selectors","selectLoading","selectErrorMessage","useEffect","actions","doClearErrorMessage","useState","initialValues","form","useForm","resolver","yupResolver","mode","defaultValues","style","backgroundImage","onSubmit","handleSubmit","values","doSigninWithEmailAndPassword","Box","Checkbox","defaultChecked","Button","marginTop"],"mappings":"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","file":"static/js/9.478a19c0.chunk.js","sourcesContent":["export default class FormErrors {\r\n  static errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage = null,\r\n  ) {\r\n    if (externalErrorMessage) {\r\n      return externalErrorMessage;\r\n    }\r\n\r\n    if (!isSubmitted && !touched[name]) {\r\n      return null;\r\n    }\r\n\r\n    const fieldErrors = errors[name];\r\n\r\n    return (\r\n      fieldErrors?.[0]?.message ||\r\n      fieldErrors?.message ||\r\n      fieldErrors ||\r\n      null\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport FormErrors from 'src/view/shared/form/formErrors';\r\n\r\nexport function InputFormItem(props) {\r\n  const {\r\n    label,\r\n    name,\r\n    hint,\r\n    type,\r\n    placeholder,\r\n    autoFocus,\r\n    autoComplete,\r\n    required,\r\n    externalErrorMessage,\r\n    disabled,\r\n    endAdornment,\r\n  } = props;\r\n\r\n  const {\r\n    register,\r\n    errors,\r\n    formState: { touched, isSubmitted },\r\n  } = useFormContext();\r\n\r\n  const errorMessage = FormErrors.errorMessage(\r\n    name,\r\n    errors,\r\n    touched,\r\n    isSubmitted,\r\n    externalErrorMessage,\r\n  );\r\n\r\n  return (\r\n    <TextField\r\n      id={name}\r\n      name={name}\r\n      type={type}\r\n      label={label}\r\n      required={required}\r\n      inputRef={register}\r\n      onChange={(event) => {\r\n        props.onChange &&\r\n          props.onChange(event.target.value);\r\n      }}\r\n      onBlur={(event) => {\r\n        props.onBlur && props.onBlur(event);\r\n      }}\r\n      margin=\"normal\"\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      placeholder={placeholder || undefined}\r\n      autoFocus={autoFocus || undefined}\r\n      autoComplete={autoComplete || undefined}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      error={Boolean(errorMessage)}\r\n      helperText={errorMessage || hint}\r\n      InputProps={{ endAdornment }}\r\n      inputProps={{\r\n        name,\r\n      }}\r\n      disabled={disabled}\r\n    />\r\n  );\r\n}\r\n\r\nInputFormItem.defaultProps = {\r\n  type: 'text',\r\n  required: false,\r\n};\r\n\r\nInputFormItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  required: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  autoFocus: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  prefix: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  autoComplete: PropTypes.string,\r\n  externalErrorMessage: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  endAdornment: PropTypes.any,\r\n};\r\n\r\nexport default InputFormItem;\r\n","import { styled } from '@material-ui/core/styles';\r\n\r\nconst Content = styled('div')(({ theme }) => ({\r\n  width: '500px',\r\n  height: '100%',\r\n  minHeight: '100%',\r\n  overflowY: 'auto',\r\n  zIndex: 1,\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  padding: '56px 40px',\r\n  backgroundColor: '#fff',\r\n\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100%',\r\n    borderLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default Content;\r\n","import styled from 'styled-components';\r\n\r\nconst Logo = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 48px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n\r\n  h1 {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport default Logo;\r\n","import { styled } from '@material-ui/core/styles';\r\n\r\nconst Wrapper = styled('div')({\r\n  width: '100%',\r\n  minHeight: '100vh',\r\n  height: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n  alignItems: 'center',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n\r\n  '&::before': {\r\n    content: '\"\"',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    top: '0',\r\n  },\r\n} as any);\r\n\r\nexport default Wrapper;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as yup from 'yup';\r\nimport { i18n } from 'src/i18n';\r\nimport moment from 'moment';\r\n\r\nconst yupFormSchemas = {\r\n  generic(label) {\r\n    return yup.mixed().label(label);\r\n  },\r\n  string(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .string()\r\n      .transform((cv, ov) => {\r\n        return ov === '' ? null : cv;\r\n      })\r\n      .nullable(true)\r\n      .trim()\r\n      .label(label);\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    if (config.matches) {\r\n      yupChain = yupChain.matches(config.matches);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  boolean(label, config?) {\r\n    return yup.bool().default(false).label(label);\r\n  },\r\n  relationToOne(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .mixed()\r\n      .nullable(true)\r\n      .label(label)\r\n      .transform((value, originalValue) => {\r\n        if (!originalValue) {\r\n          return null;\r\n        }\r\n\r\n        return originalValue.id;\r\n      });\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  stringArray(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .array()\r\n      .compact()\r\n      .ensure()\r\n      .of(\r\n        yup\r\n          .string()\r\n          .transform((cv, ov) => {\r\n            return ov === '' ? null : cv;\r\n          })\r\n          .trim(),\r\n      )\r\n      .label(label);\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  relationToMany(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .array()\r\n      .nullable(true)\r\n      .label(label)\r\n      .transform((value, originalValue) => {\r\n        if (!originalValue || !originalValue.length) {\r\n          return [];\r\n        }\r\n\r\n        return originalValue.map((item) => item.id);\r\n      });\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  integer(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .number()\r\n      .transform((cv, ov) => {\r\n        return ov === '' ? null : cv;\r\n      })\r\n      .integer()\r\n      .nullable(true)\r\n      .label(label);\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  images(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup.array().nullable(true).label(label);\r\n\r\n    if (config.required || config.min) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  files(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .array()\r\n      .compact()\r\n      .ensure()\r\n      .nullable(true)\r\n      .label(label);\r\n\r\n    if (config.required || config.min) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  enumerator(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .string()\r\n      .transform((cv, ov) => {\r\n        return ov === '' ? null : cv;\r\n      })\r\n      .label(label)\r\n      .nullable(true)\r\n      .oneOf([null, ...(config.options || [])]);\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required(\r\n        i18n('validation.string.selected'),\r\n      );\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  email(label, config?) {\r\n    config = config || {};\r\n\r\n    let yupChain = yup\r\n      .string()\r\n      .transform((cv, ov) => {\r\n        return ov === '' ? null : cv;\r\n      })\r\n      .nullable(true)\r\n      .trim()\r\n      .label(label)\r\n      .email();\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    if (config.matches) {\r\n      yupChain = yupChain.matches(config.matches);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  decimal(label, config?) {\r\n    config = config || {};\r\n    let yupChain = yup\r\n      .number()\r\n      .transform((cv, ov) => {\r\n        return ov === '' ? null : cv;\r\n      })\r\n      .nullable(true)\r\n      .label(label);\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    if (config.min || config.min === 0) {\r\n      yupChain = yupChain.min(config.min);\r\n    }\r\n\r\n    if (config.max) {\r\n      yupChain = yupChain.max(config.max);\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  datetime(label, config?) {\r\n    config = config || {};\r\n    let yupChain = yup\r\n      .mixed()\r\n      .nullable(true)\r\n      .label(label)\r\n      .transform((value, originalValue) =>\r\n        value\r\n          ? moment(value).format('YYYY-MM-DD HH:mm')\r\n          : null,\r\n      );\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n  date(label, config?) {\r\n    config = config || {};\r\n    let yupChain = yup\r\n      .mixed()\r\n      .nullable(true)\r\n      .label(label)\r\n      .test(\r\n        'is-date',\r\n        i18n('validation.mixed.default'),\r\n        (value) => {\r\n          if (!value) {\r\n            return true;\r\n          }\r\n\r\n          return moment(value, 'YYYY-MM-DD').isValid();\r\n        },\r\n      )\r\n      .transform((value) =>\r\n        value ? moment(value).format('YYYY-MM-DD') : null,\r\n      );\r\n\r\n    if (config.required) {\r\n      yupChain = yupChain.required();\r\n    }\r\n\r\n    return yupChain;\r\n  },\r\n};\r\n\r\nexport default yupFormSchemas;\r\n","import { useForm, FormProvider } from 'react-hook-form';\r\nimport actions from 'src/modules/auth/authActions';\r\nimport selectors from 'src/modules/auth/authSelectors';\r\nimport { i18n } from 'src/i18n';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Content from 'src/view/auth/styles/Content';\r\nimport Logo from 'src/view/auth/styles/Logo';\r\nimport Wrapper from 'src/view/auth/styles/Wrapper';\r\nimport InputFormItem from 'src/view/shared/form/items/InputFormItem';\r\nimport {\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Box,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport yupFormSchemas from 'src/modules/shared/yup/yupFormSchemas';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nconst schema = yup.object().shape({\r\n  email: yupFormSchemas.string(i18n('user.fields.email'), {\r\n    required: true,\r\n  }),\r\n  password: yupFormSchemas.string(\r\n    i18n('user.fields.password'),\r\n    {\r\n      required: true,\r\n    },\r\n  ),\r\n  rememberMe: yupFormSchemas.boolean(\r\n    i18n('user.fields.rememberMe'),\r\n  ),\r\n});\r\n\r\nfunction SigninPage() {\r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector(selectors.selectLoading);\r\n\r\n  const externalErrorMessage = useSelector(\r\n    selectors.selectErrorMessage,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.doClearErrorMessage());\r\n  }, [dispatch]);\r\n\r\n  const [initialValues] = useState({\r\n    email: '',\r\n    password: '',\r\n    rememberMe: true,\r\n  });\r\n\r\n  const form = useForm({\r\n    resolver: yupResolver(schema),\r\n    mode: 'all',\r\n    defaultValues: initialValues\r\n  });\r\n\r\n  const onSubmit = (values) => {\r\n    dispatch(\r\n      actions.doSigninWithEmailAndPassword(\r\n        values.email,\r\n        values.password,\r\n        values.rememberMe,\r\n      ),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        backgroundImage: `url(${'/images/signin.jpg'})`,\r\n      }}\r\n    >\r\n      <Content>\r\n        <Logo>\r\n            <h1>{i18n('app.title')}</h1>\r\n        </Logo>\r\n\r\n        <FormProvider {...form}>\r\n          <form onSubmit={form.handleSubmit(onSubmit)}>\r\n            <InputFormItem\r\n              name=\"email\"\r\n              label={i18n('user.fields.email')}\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              externalErrorMessage={externalErrorMessage}\r\n            />\r\n\r\n            <InputFormItem\r\n              name=\"password\"\r\n              label={i18n('user.fields.password')}\r\n              autoComplete=\"password\"\r\n              type=\"password\"\r\n            />\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    id={'rememberMe'}\r\n                    name={'rememberMe'}\r\n                    defaultChecked={true}\r\n                    inputRef={form.register}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                  />\r\n                }\r\n                label={i18n('user.fields.rememberMe')}\r\n              />\r\n            </Box>\r\n\r\n            <Button\r\n              style={{ marginTop: '8px' }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              fullWidth\r\n              disabled={loading}\r\n            >\r\n              {i18n('auth.signin')}\r\n            </Button>\r\n          </form>\r\n        </FormProvider>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default SigninPage;\r\n"],"sourceRoot":""}