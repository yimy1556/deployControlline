{"version":3,"sources":["view/auth/styles/Content.tsx","view/auth/styles/Logo.tsx","view/auth/styles/Wrapper.tsx","../node_modules/@material-ui/core/esm/Link/Link.js","view/auth/styles/OtherActions.tsx","view/auth/EmptyPermissionsPage.tsx"],"names":["Content","styled","theme","width","height","minHeight","overflowY","zIndex","position","display","flexDirection","padding","backgroundColor","breakpoints","down","borderLeft","Logo","div","Wrapper","justifyContent","alignItems","backgroundSize","content","top","Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","border","margin","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name","OtherActions","marginTop","textAlign","EmptyPermissionsPage","dispatch","useDispatch","style","backgroundImage","i18n","onClick","actions","doSignout"],"mappings":"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","file":"static/js/10.0bb7c6cd.chunk.js","sourcesContent":["import { styled } from '@material-ui/core/styles';\r\n\r\nconst Content = styled('div')(({ theme }) => ({\r\n  width: '500px',\r\n  height: '100%',\r\n  minHeight: '100%',\r\n  overflowY: 'auto',\r\n  zIndex: 1,\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  padding: '56px 40px',\r\n  backgroundColor: '#fff',\r\n\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100%',\r\n    borderLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default Content;\r\n","import styled from 'styled-components';\r\n\r\nconst Logo = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 48px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n\r\n  h1 {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport default Logo;\r\n","import { styled } from '@material-ui/core/styles';\r\n\r\nconst Wrapper = styled('div')({\r\n  width: '100%',\r\n  minHeight: '100vh',\r\n  height: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n  alignItems: 'center',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n\r\n  '&::before': {\r\n    content: '\"\"',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    top: '0',\r\n  },\r\n} as any);\r\n\r\nexport default Wrapper;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { styled } from '@material-ui/core/styles';\r\n\r\nconst OtherActions = styled('div')({\r\n  marginTop: '24px',\r\n  textAlign: 'center',\r\n});\r\n\r\nexport default OtherActions;\r\n","import MaterialLink from '@material-ui/core/Link';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { i18n } from 'src/i18n';\r\nimport actions from 'src/modules/auth/authActions';\r\nimport Content from 'src/view/auth/styles/Content';\r\nimport Wrapper from 'src/view/auth/styles/Wrapper';\r\nimport Logo from 'src/view/auth/styles/Logo';\r\nimport OtherActions from 'src/view/auth/styles/OtherActions';\r\n\r\nfunction EmptyPermissionsPage(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const doSignout = () => {\r\n    dispatch(actions.doSignout());\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        backgroundImage: `url(${\r\n          '/images/emptyPermissions.jpg'\r\n        })`,\r\n      }}\r\n    >\r\n      <Content>\r\n        <Logo>\r\n            <h1>{i18n('app.title')}</h1>\r\n        </Logo>\r\n\r\n        <h3>{i18n('auth.emptyPermissions.message')}</h3>\r\n\r\n        <OtherActions>\r\n          <MaterialLink\r\n            component=\"button\"\r\n            onClick={doSignout}\r\n          >\r\n            {i18n('auth.signout')}\r\n          </MaterialLink>\r\n        </OtherActions>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default EmptyPermissionsPage;\r\n"],"sourceRoot":""}